// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.9.2 (stable) (Wed Aug 27 03:49:40 2025 -0700) on "windows_x64"
// Module: packages/socket_io_common/socket_io_common
// Flags: enableAsserts(true)
define(['dart_sdk', 'packages/logging/logging'], (function load__packages__socket_io_common__socket_io_common(dart_sdk, packages__logging__logging) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const convert = dart_sdk.convert;
  const _js_helper = dart_sdk._js_helper;
  const async = dart_sdk.async;
  const _native_typed_data = dart_sdk._native_typed_data;
  const typed_data = dart_sdk.typed_data;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const level = packages__logging__logging.logging__src__level;
  const logger = packages__logging__logging.logging__src__logger;
  var socket_io_common = Object.create(dart.library);
  var parser = Object.create(dart.library);
  var is_binary = Object.create(dart.library);
  var event_emitter = Object.create(dart.library);
  var binary = Object.create(dart.library);
  var parser$ = Object.create(dart.library);
  var encodePacket = Object.create(dart.library);
  var commons = Object.create(dart.library);
  var decodePacket = Object.create(dart.library);
  var unknown_js_type = Object.create(dart.library);
  var js_interop_type_adapter = Object.create(dart.library);
  var $_get = dartx._get;
  var $addAll = dartx.addAll;
  var $substring = dartx.substring;
  var $_set = dartx._set;
  var $isNotEmpty = dartx.isNotEmpty;
  var $contains = dartx.contains;
  var $forEach = dartx.forEach;
  var $remove = dartx.remove;
  var $putIfAbsent = dartx.putIfAbsent;
  var $add = dartx.add;
  var $isEmpty = dartx.isEmpty;
  var $clear = dartx.clear;
  var $length = dartx.length;
  var $entries = dartx.entries;
  var $toLowerCase = dartx.toLowerCase;
  var $toInt = dartx.toInt;
  var $join = dartx.join;
  var $map = dartx.map;
  var $asUint8List = dartx.asUint8List;
  var $codeUnits = dartx.codeUnits;
  var $containsKey = dartx.containsKey;
  var T = {
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "_interceptors|JSArray<core|String>", true)))(),
    Map: () => (T.Map = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|Map<@,@>", true)))(),
    Iterable: () => (T.Iterable = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|Iterable<@>", true)))(),
    dynamicToString: () => (T.dynamicToString = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|String(@)", true)))(),
    dynamicTodynamic: () => (T.dynamicTodynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "@(@)", true)))(),
    VoidToEncoder: () => (T.VoidToEncoder = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "socket_io_common__src__parser__parser|Encoder()", true)))(),
    Logger: () => (T.Logger = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "logging__src__logger|Logger", true)))(),
    IdentityMapOfString$dynamic: () => (T.IdentityMapOfString$dynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "_js_helper|IdentityMap<core|String,@>", true)))(),
    Object: () => (T.Object = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|Object", true)))(),
    List: () => (T.List = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|List<@>", true)))(),
    int: () => (T.int = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|int", true)))(),
    StringTodynamic: () => (T.StringTodynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "@(core|String)", true)))(),
    dynamicAnddynamicTodynamic: () => (T.dynamicAnddynamicTodynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "@(@,@)", true)))(),
    VoidToDecoder: () => (T.VoidToDecoder = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "socket_io_common__src__parser__parser|Decoder()", true)))(),
    IdentityMapOfString$ListOfdynamicTodynamic: () => (T.IdentityMapOfString$ListOfdynamicTodynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "_js_helper|IdentityMap<core|String,core|List<@(@)>>", true)))(),
    JSArrayOfStringAnddynamicTodynamic: () => (T.JSArrayOfStringAnddynamicTodynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "_interceptors|JSArray<@(core|String,@)>", true)))(),
    dynamic: () => (T.dynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "@", true)))(),
    dynamicTovoid: () => (T.dynamicTovoid = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "~(@)", true)))(),
    FnTovoid: () => (T.FnTovoid = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "~(@(@))", true)))(),
    FnTovoid$1: () => (T.FnTovoid$1 = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "~(@(core|String,@))", true)))(),
    JSArrayOfdynamicTodynamic: () => (T.JSArrayOfdynamicTodynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "_interceptors|JSArray<@(@)>", true)))(),
    VoidToListOfdynamicTodynamic: () => (T.VoidToListOfdynamicTodynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|List<@(@)>()", true)))(),
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "~()", true)))(),
    VoidToEventEmitter: () => (T.VoidToEventEmitter = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "socket_io_common__src__util__event_emitter|EventEmitter()", true)))(),
    StringAnddynamicTovoid: () => (T.StringAnddynamicTovoid = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "~(core|String[@])", true)))(),
    dynamicAnddynamicTovoid: () => (T.dynamicAnddynamicTovoid = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "~(@[@])", true)))(),
    StringAndFnToFn: () => (T.StringAndFnToFn = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "@()(core|String,@(@))", true)))(),
    StringAndFnTovoid: () => (T.StringAndFnTovoid = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "~(core|String,@(@))", true)))(),
    StringAndFnTovoid$1: () => (T.StringAndFnTovoid$1 = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "~(core|String[@(@)?])", true)))(),
    FnTovoid$2: () => (T.FnTovoid$2 = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "~([@(core|String,@)?])", true)))(),
    StringTobool: () => (T.StringTobool = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|bool(core|String)", true)))(),
    MapOfString$ListOfdynamicTodynamic: () => (T.MapOfString$ListOfdynamicTodynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|Map<core|String,core|List<@(@)>>", true)))(),
    ListOfStringAnddynamicTodynamic: () => (T.ListOfStringAnddynamicTodynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|List<@(core|String,@)>", true)))(),
    VoidTodynamic: () => (T.VoidTodynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "@()", true)))(),
    BinaryReconstructorN: () => (T.BinaryReconstructorN = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "socket_io_common__src__parser__parser|BinaryReconstructor?", true)))(),
    MapN: () => (T.MapN = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|Map<@,@>?", true)))(),
    dynamicToBinaryReconstructor: () => (T.dynamicToBinaryReconstructor = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "socket_io_common__src__parser__parser|BinaryReconstructor(@)", true)))(),
    dynamicTobool: () => (T.dynamicTobool = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|bool(@)", true)))(),
    String: () => (T.String = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|String", true)))(),
    JSArrayOfStringN: () => (T.JSArrayOfStringN = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "_interceptors|JSArray<core|String?>", true)))(),
    TypedData: () => (T.TypedData = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "typed_data|TypedData", true)))(),
    ObjectTobool: () => (T.ObjectTobool = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|bool(core|Object)", true)))(),
    ByteBuffer: () => (T.ByteBuffer = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "typed_data|ByteBuffer", true)))(),
    Function: () => (T.Function = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|Function", true)))(),
    dynamicAndboolTobool: () => (T.dynamicAndboolTobool = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|bool(@[core|bool])", true)))(),
    dynamicToFunctionN: () => (T.dynamicToFunctionN = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|Function?(@)", true)))(),
    LinkedMap: () => (T.LinkedMap = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "_js_helper|LinkedMap<@,@>", true)))(),
    Uint8List: () => (T.Uint8List = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "typed_data|Uint8List", true)))(),
    IdentityMapOfString$Object: () => (T.IdentityMapOfString$Object = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "_js_helper|IdentityMap<core|String,core|Object>", true)))(),
    dynamicAnddynamicTovoid$1: () => (T.dynamicAnddynamicTovoid$1 = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "~(@,@)", true)))(),
    MapToMap: () => (T.MapToMap = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|Map<@,@>(core|Map<@,@>)", true)))(),
    ObjectNAndListToObjectN: () => (T.ObjectNAndListToObjectN = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|Object?(core|Object?,core|List<@>)", true)))(),
    MapAndListToMap: () => (T.MapAndListToMap = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|Map<@,@>(core|Map<@,@>,core|List<@>)", true)))(),
    VoidToBinary: () => (T.VoidToBinary = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "socket_io_common__src__parser__binary|Binary()", true)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|Null(@)", true)))(),
    Future: () => (T.Future = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "async|Future<@>", true)))(),
    dynamicToFuture: () => (T.dynamicToFuture = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "async|Future<@>(@)", true)))(),
    ListTodynamic: () => (T.ListTodynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "@(core|List<@>)", true)))(),
    Map__ToStringN: () => (T.Map__ToStringN = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|String?(core|Map<@,@>{callback!@(@),fromClient:core|bool,supportsBinary!core|bool})", true)))(),
    List__Todynamic: () => (T.List__Todynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "@(core|List<@>{callback!@(@)})", true)))(),
    ListAndFnAndFnTodynamic: () => (T.ListAndFnAndFnTodynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "@(core|List<@>,@(@,@(@)),@(@))", true)))(),
    VoidToPacketParser: () => (T.VoidToPacketParser = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "socket_io_common__src__engine__parser__parser|PacketParser()", true)))(),
    StringAnddynamicToPacket: () => (T.StringAnddynamicToPacket = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "socket_io_common__src__engine__parser__encodePacket|Packet(core|String,@)", true)))(),
    NativeUint8List: () => (T.NativeUint8List = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "_native_typed_data|NativeUint8List", true)))(),
    VoidToTextEncoder: () => (T.VoidToTextEncoder = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "socket_io_common__src__engine__parser__encodePacket|TextEncoder()", true)))(),
    StringToUint8List: () => (T.StringToUint8List = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "typed_data|Uint8List(core|String)", true)))(),
    PacketAndboolAndFnTodynamic: () => (T.PacketAndboolAndFnTodynamic = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "@(socket_io_common__src__engine__parser__encodePacket|Packet,core|bool,@(@))", true)))(),
    dynamicAndboolToUint8List: () => (T.dynamicAndboolToUint8List = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "typed_data|Uint8List(@,core|bool)", true)))(),
    PacketAndFnTovoid: () => (T.PacketAndFnTovoid = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "~(socket_io_common__src__engine__parser__encodePacket|Packet,@(@))", true)))(),
    VoidToString: () => (T.VoidToString = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|String()", true)))(),
    PacketType: () => (T.PacketType = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "socket_io_common__src__engine__parser__commons|PacketType", true)))(),
    ListOfPacketType: () => (T.ListOfPacketType = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|List<socket_io_common__src__engine__parser__commons|PacketType>", true)))(),
    StringN: () => (T.StringN = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "core|String?", true)))(),
    IdentityMapOfString$String: () => (T.IdentityMapOfString$String = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "_js_helper|IdentityMap<core|String,core|String>", true)))(),
    IdentityMapOfString$StringN: () => (T.IdentityMapOfString$StringN = dart.constFn(dart_rti._Universe.eval(dart.typeUniverse, "_js_helper|IdentityMap<core|String,core|String?>", true)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.constList(T.String(), ["connect", "connect_error", "disconnect", "disconnecting", "newListener", "removeListener"]);
    },
    get C1() {
      return C[1] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "OPEN",
        [_Enum_index]: 0
      }, commons.PacketType.prototype));
    },
    get C2() {
      return C[2] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "CLOSE",
        [_Enum_index]: 1
      }, commons.PacketType.prototype));
    },
    get C3() {
      return C[3] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "PING",
        [_Enum_index]: 2
      }, commons.PacketType.prototype));
    },
    get C4() {
      return C[4] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "PONG",
        [_Enum_index]: 3
      }, commons.PacketType.prototype));
    },
    get C5() {
      return C[5] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "MESSAGE",
        [_Enum_index]: 4
      }, commons.PacketType.prototype));
    },
    get C6() {
      return C[6] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "UPGRADE",
        [_Enum_index]: 5
      }, commons.PacketType.prototype));
    },
    get C7() {
      return C[7] = dart.const(Object.setPrototypeOf({
        [_Enum__name]: "NOOP",
        [_Enum_index]: 6
      }, commons.PacketType.prototype));
    },
    get C8() {
      return C[8] = dart.constList(T.PacketType(), [C[1] || CT.C1, C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4, C[5] || CT.C5, C[6] || CT.C6, C[7] || CT.C7]);
    },
    get C9() {
      return C[9] = dart.constList(T.StringN(), ["open", "close", "ping", "pong", "message", "upgrade", "noop"]);
    },
    get C10() {
      return C[10] = dart.constMap(T.String(), T.int(), ["open", 0, "close", 1, "ping", 2, "pong", 3, "message", 4, "upgrade", 5, "noop", 6]);
    },
    get C11() {
      return C[11] = dart.constMap(T.String(), T.String(), ["type", "error", "data", "parser error"]);
    }
  });
  var C = Array(12).fill(void 0);
  var I = [
    "package:socket_io_common/src/parser/parser.dart",
    "package:logging/src/logger.dart",
    "package:socket_io_common/src/util/event_emitter.dart",
    "dart:core",
    "package:socket_io_common/src/parser/binary.dart",
    "package:socket_io_common/src/engine/parser/parser.dart",
    "package:socket_io_common/src/engine/parser/encodePacket.dart",
    "package:socket_io_common/src/engine/parser/commons.dart"
  ];
  (function() {
  }).prototype = socket_io_common;
  var _as = dart.privateName(dart_rti, "_as");
  parser.Encoder = class Encoder extends core.Object {
    encode(obj) {
      if (parser.Encoder._logger.isLoggable(level.Level.FINE)) {
        parser.Encoder._logger.fine("encoding packet " + dart.str(obj));
      }
      if (2 === dart.dsend(obj, '_get', ["type"]) || 3 === dart.dsend(obj, '_get', ["type"])) {
        if (is_binary.hasBinary(obj)) {
          dart.dsend(obj, '_set', ["type", dart.equals(dart.dsend(obj, '_get', ["type"]), 2) ? 5 : 6]);
          return parser.Encoder.encodeAsBinary(obj);
        }
      }
      return _interceptors.JSArray.of(T.JSArrayOfString(), [parser.Encoder.encodeAsString(obj)]);
    }
    static encodeAsString(obj) {
      let str = dart.str(dart.dsend(obj, '_get', ["type"]));
      if (5 === dart.dsend(obj, '_get', ["type"]) || 6 === dart.dsend(obj, '_get', ["type"])) {
        str = str + (dart.str(dart.dsend(obj, '_get', ["attachments"])) + "-");
      }
      if (dart.dsend(obj, '_get', ["nsp"]) != null && "/" !== dart.dsend(obj, '_get', ["nsp"])) {
        str = str + dart_rti._asString(dart.dsend(dart.dsend(obj, '_get', ["nsp"]), '+', [","]));
      }
      if (dart.dsend(obj, '_get', ["id"]) != null) {
        str = str + dart.str(dart.dsend(obj, '_get', ["id"]));
      }
      if (dart.dsend(obj, '_get', ["data"]) != null) {
        str = str + convert.json.encode(dart.dsend(obj, '_get', ["data"]));
      }
      if (parser.Encoder._logger.isLoggable(level.Level.FINE)) {
        parser.Encoder._logger.fine("encoded " + dart.str(obj) + " as " + str);
      }
      return str;
    }
    static encodeAsBinary(obj) {
      let t$360;
      let deconstruction = binary.Binary.deconstructPacket(T.Map()[_as](obj));
      let pack = parser.Encoder.encodeAsString(deconstruction[$_get]("packet"));
      let buffers = deconstruction[$_get]("buffers");
      t$360 = [pack];
      return (() => {
        t$360[$addAll](T.Iterable()[_as](buffers));
        return t$360;
      })();
    }
    static ['_#new#tearOff']() {
      return new parser.Encoder.new();
    }
  };
  (parser.Encoder.new = function() {
    ;
  }).prototype = parser.Encoder.prototype;
  dart.lazyFn(parser.Encoder.encodeAsString, () => T.dynamicToString());
  dart.lazyFn(parser.Encoder.encodeAsBinary, () => T.dynamicTodynamic());
  dart.lazyFn(parser.Encoder['_#new#tearOff'], () => T.VoidToEncoder());
  dart.addRtiResources(parser.Encoder, ["socket_io_common__src__parser__parser|Encoder"]);
  dart.setMethodSignature(parser.Encoder, () => dart.global.Object.setPrototypeOf({
    encode: _ti => T.dynamicTodynamic()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(parser.Encoder))));
  dart.setMethodsImmediateTargetSignature(parser.Encoder, () => dart.global.Object.setPrototypeOf({
    encode: "package:socket_io_common/src/parser/parser.dart:Encoder",
    encodeAsString: "package:socket_io_common/src/parser/parser.dart:Encoder",
    encodeAsBinary: "package:socket_io_common/src/parser/parser.dart:Encoder"
  }, dart.getMethodsImmediateTargets(dart.global.Object.getPrototypeOf(parser.Encoder))));
  dart.setStaticMethodSignature(parser.Encoder, () => ['encodeAsString', 'encodeAsBinary']);
  dart.setLibraryUri(parser.Encoder, I[0]);
  dart.setStaticFieldSignature(parser.Encoder, () => ['_logger']);
  dart.defineLazy(parser.Encoder, {
    /*parser.Encoder._logger*/get _logger() {
      return logger.Logger.new("socket_io:parser.Encoder");
    }
  });
  var reconstructor = dart.privateName(parser, "Decoder.reconstructor");
  var _is = dart.privateName(dart_rti, "_is");
  var _events = dart.privateName(event_emitter, "_events");
  var _eventsOnce = dart.privateName(event_emitter, "_eventsOnce");
  var _eventsAny = dart.privateName(event_emitter, "_eventsAny");
  var _emit = dart.privateName(event_emitter, "_emit");
  event_emitter.EventEmitter = class EventEmitter extends core.Object {
    static ['_#new#tearOff']() {
      return new event_emitter.EventEmitter.new();
    }
    emit(event, data = null) {
      return this[_emit](event, data);
    }
    [_emit](event, data = null) {
      let t$361, t$361$;
      let list0 = this[_events][$_get](event);
      let list = list0 != null ? core.List.from(T.List(), list0) : null;
      t$361 = list;
      t$361 == null ? null : t$361[$forEach](dart.fn(handler => {
        dart.dcall(handler, [data]);
      }, T.dynamicTovoid()));
      t$361$ = this[_eventsOnce][$remove](event);
      t$361$ == null ? null : t$361$[$forEach](dart.fn(handler => {
        handler(data);
      }, T.FnTovoid()));
      this[_eventsAny][$forEach](dart.fn(handler => {
        handler(event, data);
      }, T.FnTovoid$1()));
    }
    emitReserved(event, data = null) {
      return this[_emit](dart_rti._asString(event), data);
    }
    on(event, handler) {
      this[_events][$putIfAbsent](event, dart.fn(() => _interceptors.JSArray.of(T.JSArrayOfdynamicTodynamic(), []), T.VoidToListOfdynamicTodynamic()));
      dart.nullCheck(this[_events][$_get](event))[$add](handler);
      return dart.fn(() => this.off(event, handler), T.VoidTovoid());
    }
    once(event, handler) {
      this[_eventsOnce][$putIfAbsent](event, dart.fn(() => _interceptors.JSArray.of(T.JSArrayOfdynamicTodynamic(), []), T.VoidToListOfdynamicTodynamic()));
      dart.nullCheck(this[_eventsOnce][$_get](event))[$add](handler);
    }
    onAny(handler) {
      this[_eventsAny][$add](handler);
    }
    off(event, handler = null) {
      let t$361, t$361$, t$361$0, t$361$1;
      if (handler != null) {
        t$361 = this[_events][$_get](event);
        t$361 == null ? null : t$361[$remove](handler);
        t$361$ = this[_eventsOnce][$_get](event);
        t$361$ == null ? null : t$361$[$remove](handler);
        if ((t$361$0 = this[_events][$_get](event), t$361$0 == null ? null : t$361$0[$isEmpty]) === true) {
          this[_events][$remove](event);
        }
        if ((t$361$1 = this[_eventsOnce][$_get](event), t$361$1 == null ? null : t$361$1[$isEmpty]) === true) {
          this[_eventsOnce][$remove](event);
        }
      } else {
        this[_events][$remove](event);
        this[_eventsOnce][$remove](event);
      }
    }
    offAny(handler = null) {
      if (handler != null) {
        this[_eventsAny][$remove](handler);
      } else {
        this[_eventsAny][$clear]();
      }
    }
    clearListeners() {
      this[_events] = new _js_helper.IdentityMap.new(T.IdentityMapOfString$ListOfdynamicTodynamic());
      this[_eventsOnce] = new _js_helper.IdentityMap.new(T.IdentityMapOfString$ListOfdynamicTodynamic());
      this[_eventsAny][$clear]();
    }
    hasListeners(event) {
      let t$361, t$361$;
      return (t$361 = this[_events][$_get](event), t$361 == null ? null : t$361[$isNotEmpty]) === true || (t$361$ = this[_eventsOnce][$_get](event), t$361$ == null ? null : t$361$[$isNotEmpty]) === true;
    }
  };
  (event_emitter.EventEmitter.new = function() {
    this[_events] = new _js_helper.IdentityMap.new(T.IdentityMapOfString$ListOfdynamicTodynamic());
    this[_eventsOnce] = new _js_helper.IdentityMap.new(T.IdentityMapOfString$ListOfdynamicTodynamic());
    this[_eventsAny] = _interceptors.JSArray.of(T.JSArrayOfStringAnddynamicTodynamic(), []);
    ;
  }).prototype = event_emitter.EventEmitter.prototype;
  dart.lazyFn(event_emitter.EventEmitter['_#new#tearOff'], () => T.VoidToEventEmitter());
  dart.addRtiResources(event_emitter.EventEmitter, ["socket_io_common__src__util__event_emitter|EventEmitter"]);
  dart.setMethodSignature(event_emitter.EventEmitter, () => dart.global.Object.setPrototypeOf({
    emit: _ti => T.StringAnddynamicTovoid(),
    [_emit]: _ti => T.StringAnddynamicTovoid(),
    emitReserved: _ti => T.dynamicAnddynamicTovoid(),
    on: _ti => T.StringAndFnToFn(),
    once: _ti => T.StringAndFnTovoid(),
    onAny: _ti => T.FnTovoid$1(),
    off: _ti => T.StringAndFnTovoid$1(),
    offAny: _ti => T.FnTovoid$2(),
    clearListeners: _ti => T.VoidTovoid(),
    hasListeners: _ti => T.StringTobool()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(event_emitter.EventEmitter))));
  dart.setMethodsImmediateTargetSignature(event_emitter.EventEmitter, () => dart.global.Object.setPrototypeOf({
    emit: "package:socket_io_common/src/util/event_emitter.dart:EventEmitter",
    [_emit]: "package:socket_io_common/src/util/event_emitter.dart:EventEmitter",
    emitReserved: "package:socket_io_common/src/util/event_emitter.dart:EventEmitter",
    on: "package:socket_io_common/src/util/event_emitter.dart:EventEmitter",
    once: "package:socket_io_common/src/util/event_emitter.dart:EventEmitter",
    onAny: "package:socket_io_common/src/util/event_emitter.dart:EventEmitter",
    off: "package:socket_io_common/src/util/event_emitter.dart:EventEmitter",
    offAny: "package:socket_io_common/src/util/event_emitter.dart:EventEmitter",
    clearListeners: "package:socket_io_common/src/util/event_emitter.dart:EventEmitter",
    hasListeners: "package:socket_io_common/src/util/event_emitter.dart:EventEmitter"
  }, dart.getMethodsImmediateTargets(dart.global.Object.getPrototypeOf(event_emitter.EventEmitter))));
  dart.setLibraryUri(event_emitter.EventEmitter, I[2]);
  dart.setFieldSignature(event_emitter.EventEmitter, () => dart.global.Object.setPrototypeOf({
    [_events]: {
      type: _ti => T.MapOfString$ListOfdynamicTodynamic(),
      isConst: false,
      isFinal: false,
      libraryUri: I[3]
    },
    [_eventsOnce]: {
      type: _ti => T.MapOfString$ListOfdynamicTodynamic(),
      isConst: false,
      isFinal: false,
      libraryUri: I[3]
    },
    [_eventsAny]: {
      type: _ti => T.ListOfStringAnddynamicTodynamic(),
      isConst: false,
      isFinal: false,
      libraryUri: I[3]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(event_emitter.EventEmitter))));
  parser.Decoder = class Decoder extends event_emitter.EventEmitter {
    get reconstructor() {
      return this[reconstructor];
    }
    set reconstructor(value) {
      this[reconstructor] = value;
    }
    add(obj) {
      let packet = null;
      if (typeof obj == 'string') {
        if (this.reconstructor != null) {
          dart.throw(core.Exception.new("got plaintext data when reconstructing a packet"));
        }
        packet = parser.Decoder.decodeString(obj);
        if (5 === dart.dsend(packet, '_get', ["type"]) || 6 === dart.dsend(packet, '_get', ["type"])) {
          this.reconstructor = new parser.BinaryReconstructor.new(packet);
          if (dart.equals(dart.dsend(packet, '_get', ["attachments"]), 0)) {
            this.emitReserved("decoded", packet);
          }
        } else {
          this.emitReserved("decoded", packet);
        }
      } else if (is_binary.isBinary(obj) || T.Map()[_is](obj) && obj[$_get]("base64") != null) {
        if (this.reconstructor == null) {
          dart.throw(new core.UnsupportedError.new("got binary data when not reconstructing a packet"));
        } else {
          packet = dart.nullCheck(this.reconstructor).takeBinaryData(obj);
          if (packet != null) {
            this.reconstructor = null;
            this.emitReserved("decoded", packet);
          }
        }
      } else {
        dart.throw(new core.UnsupportedError.new("Unknown type: " + dart_rti._asString(obj)));
      }
    }
    static decodeString(str) {
      let t$360, t$360$;
      let i = 0;
      let endLen = str.length - 1;
      let p = new _js_helper.IdentityMap.from(T.IdentityMapOfString$dynamic(), ["type", core.num.parse(str[$_get](0))]);
      if (parser.PacketTypes[$_get](dart_rti._asInt(p[$_get]("type"))) == null) {
        dart.throw(new core.UnsupportedError.new("unknown packet type " + dart_rti._asString(p[$_get]("type"))));
      }
      if (5 === p[$_get]("type") || 6 === p[$_get]("type")) {
        let start = i + 1;
        while (str[$_get](i = i + 1) !== "-" && i !== str.length) {
        }
        let buf = str[$substring](start, i);
        if (buf !== dart.str((t$360 = core.num.tryParse(buf), t$360 == null ? -1 : t$360)) || str[$_get](i) !== "-") {
          dart.throw(new core.ArgumentError.new("Illegal attachments"));
        }
        p[$_set]("attachments", core.num.parse(buf));
      }
      if (i < endLen - 1 && "/" === str[$_get](i + 1)) {
        let start$ = i + 1;
        while ((i = i + 1) > 0) {
          if (i === str.length) break;
          let c = str[$_get](i);
          if ("," === c) break;
        }
        p[$_set]("nsp", str[$substring](start$, i));
      } else {
        p[$_set]("nsp", "/");
      }
      let next = i < endLen - 1 ? str[$_get](i + 1) : null;
      if ((t$360$ = next, t$360$ == null ? null : t$360$[$isNotEmpty]) === true && dart.str(core.num.tryParse(dart.nullCheck(next))) === next) {
        let start$0 = i + 1;
        while ((i = i + 1) > 0) {
          let c$ = str.length > i ? str[$_get](i) : null;
          if (dart.str(core.num.tryParse(dart.nullCheck(c$))) !== c$) {
            i = i - 1;
            break;
          }
          if (i === str.length) break;
        }
        p[$_set]("id", core.int.tryParse(str[$substring](start$0, i + 1)));
      }
      if (i < endLen - 1 && str[$_get](i = i + 1)[$isNotEmpty] === true) {
        let payload = parser.Decoder.tryParse(str[$substring](i));
        if (dart.dtest(parser.Decoder.isPayloadValid(p[$_get]("type"), payload))) {
          p[$_set]("data", payload);
        } else {
          dart.throw(new core.UnsupportedError.new("invalid payload"));
        }
      }
      return p;
    }
    static tryParse(str) {
      try {
        return convert.json.decode(dart_rti._asString(str));
      } catch (t$36$35e) {
        let e = dart.getThrown(t$36$35e);
        if (T.Object()[_is](e)) {
          return false;
        } else
          throw t$36$35e;
      }
    }
    static isPayloadValid(type, payload) {
      switch (type) {
        case 0:
          {
            return parser.isObject(payload);
          }
        case 1:
          {
            return payload == null;
          }
        case 4:
          {
            return typeof payload == 'string' || parser.isObject(payload);
          }
        case 2:
        case 5:
          {
            return T.List()[_is](payload) && payload[$isNotEmpty] && (T.int()[_is](payload[$_get](0)) || typeof payload[$_get](0) == 'string' && !parser.RESERVED_EVENTS[$contains](payload[$_get](0)));
          }
        case 3:
        case 6:
          {
            return T.List()[_is](payload);
          }
      }
    }
    destroy() {
      if (this.reconstructor != null) {
        dart.nullCheck(this.reconstructor).finishedReconstruction();
        this.reconstructor = null;
      }
    }
    static ['_#new#tearOff']() {
      return new parser.Decoder.new();
    }
  };
  (parser.Decoder.new = function() {
    this[reconstructor] = null;
    dart.global.Object.getPrototypeOf(parser.Decoder).new.call(this);
    ;
  }).prototype = parser.Decoder.prototype;
  dart.lazyFn(parser.Decoder.decodeString, () => T.StringTodynamic());
  dart.lazyFn(parser.Decoder.tryParse, () => T.dynamicTodynamic());
  dart.lazyFn(parser.Decoder.isPayloadValid, () => T.dynamicAnddynamicTodynamic());
  dart.lazyFn(parser.Decoder['_#new#tearOff'], () => T.VoidToDecoder());
  dart.addRtiResources(parser.Decoder, ["socket_io_common__src__parser__parser|Decoder"]);
  dart.setMethodSignature(parser.Decoder, () => dart.global.Object.setPrototypeOf({
    add: _ti => T.dynamicTodynamic(),
    destroy: _ti => T.VoidTodynamic()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(parser.Decoder))));
  dart.setMethodsImmediateTargetSignature(parser.Decoder, () => dart.global.Object.setPrototypeOf({
    add: "package:socket_io_common/src/parser/parser.dart:Decoder",
    decodeString: "package:socket_io_common/src/parser/parser.dart:Decoder",
    tryParse: "package:socket_io_common/src/parser/parser.dart:Decoder",
    isPayloadValid: "package:socket_io_common/src/parser/parser.dart:Decoder",
    destroy: "package:socket_io_common/src/parser/parser.dart:Decoder"
  }, dart.getMethodsImmediateTargets(dart.global.Object.getPrototypeOf(parser.Decoder))));
  dart.setStaticMethodSignature(parser.Decoder, () => ['decodeString', 'tryParse', 'isPayloadValid']);
  dart.setLibraryUri(parser.Decoder, I[0]);
  dart.setFieldSignature(parser.Decoder, () => dart.global.Object.setPrototypeOf({reconstructor: {
      type: _ti => T.BinaryReconstructorN(),
      isConst: false,
      isFinal: false,
      libraryUri: I[0]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(parser.Decoder))));
  var reconPack = dart.privateName(parser, "BinaryReconstructor.reconPack");
  var buffers = dart.privateName(parser, "BinaryReconstructor.buffers");
  parser.BinaryReconstructor = class BinaryReconstructor extends core.Object {
    get reconPack() {
      return this[reconPack];
    }
    set reconPack(value) {
      this[reconPack] = value;
    }
    get buffers() {
      return this[buffers];
    }
    set buffers(value) {
      this[buffers] = value;
    }
    static ['_#new#tearOff'](packet) {
      return new parser.BinaryReconstructor.new(packet);
    }
    takeBinaryData(binData) {
      this.buffers[$add](binData);
      if (this.buffers[$length] === dart.nullCheck(this.reconPack)[$_get]("attachments")) {
        let packet = binary.Binary.reconstructPacket(dart.nullCheck(this.reconPack), this.buffers);
        this.finishedReconstruction();
        return packet;
      }
      return null;
    }
    finishedReconstruction() {
      this.reconPack = null;
      this.buffers = [];
    }
  };
  (parser.BinaryReconstructor.new = function(packet) {
    this[reconPack] = null;
    this[buffers] = [];
    this.reconPack = T.MapN()[_as](packet);
  }).prototype = parser.BinaryReconstructor.prototype;
  dart.lazyFn(parser.BinaryReconstructor['_#new#tearOff'], () => T.dynamicToBinaryReconstructor());
  dart.addRtiResources(parser.BinaryReconstructor, ["socket_io_common__src__parser__parser|BinaryReconstructor"]);
  dart.setMethodSignature(parser.BinaryReconstructor, () => dart.global.Object.setPrototypeOf({
    takeBinaryData: _ti => T.dynamicTodynamic(),
    finishedReconstruction: _ti => T.VoidTovoid()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(parser.BinaryReconstructor))));
  dart.setMethodsImmediateTargetSignature(parser.BinaryReconstructor, () => dart.global.Object.setPrototypeOf({
    takeBinaryData: "package:socket_io_common/src/parser/parser.dart:BinaryReconstructor",
    finishedReconstruction: "package:socket_io_common/src/parser/parser.dart:BinaryReconstructor"
  }, dart.getMethodsImmediateTargets(dart.global.Object.getPrototypeOf(parser.BinaryReconstructor))));
  dart.setLibraryUri(parser.BinaryReconstructor, I[0]);
  dart.setFieldSignature(parser.BinaryReconstructor, () => dart.global.Object.setPrototypeOf({
    reconPack: {
      type: _ti => T.MapN(),
      isConst: false,
      isFinal: false,
      libraryUri: I[3]
    },
    buffers: {
      type: _ti => T.List(),
      isConst: false,
      isFinal: false,
      libraryUri: I[3]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(parser.BinaryReconstructor))));
  parser.isNamespaceValid = function isNamespaceValid(nsp) {
    return typeof nsp == 'string';
  };
  dart.lazyFn(parser.isNamespaceValid, () => T.dynamicTobool());
  parser.isInteger = function isInteger(value) {
    return T.int()[_is](value);
  };
  dart.lazyFn(parser.isInteger, () => T.dynamicTobool());
  parser.isAckIdValid = function isAckIdValid(id) {
    return id == null || parser.isInteger(id);
  };
  dart.lazyFn(parser.isAckIdValid, () => T.dynamicTobool());
  parser.isObject = function isObject(payload) {
    return payload == null || T.Map()[_is](payload) || T.List()[_is](payload);
  };
  dart.lazyFn(parser.isObject, () => T.dynamicTobool());
  parser.isPacketValid = function isPacketValid(packet) {
    return parser.isNamespaceValid(dart.dsend(packet, '_get', ["nsp"])) && parser.isAckIdValid(dart.dsend(packet, '_get', ["id"])) && dart.dtest(parser.Decoder.isPayloadValid(dart.dsend(packet, '_get', ["type"]), dart.dsend(packet, '_get', ["data"])));
  };
  dart.lazyFn(parser.isPacketValid, () => T.dynamicTobool());
  dart.defineLazy(parser, {
    /*parser.CONNECT*/get CONNECT() {
      return 0;
    },
    /*parser.DISCONNECT*/get DISCONNECT() {
      return 1;
    },
    /*parser.EVENT*/get EVENT() {
      return 2;
    },
    /*parser.ACK*/get ACK() {
      return 3;
    },
    /*parser.CONNECT_ERROR*/get CONNECT_ERROR() {
      return 4;
    },
    /*parser.BINARY_EVENT*/get BINARY_EVENT() {
      return 5;
    },
    /*parser.BINARY_ACK*/get BINARY_ACK() {
      return 6;
    },
    /*parser.RESERVED_EVENTS*/get RESERVED_EVENTS() {
      return C[0] || CT.C0;
    },
    /*parser.PacketTypes*/get PacketTypes() {
      return _interceptors.JSArray.of(T.JSArrayOfStringN(), ["CONNECT", "DISCONNECT", "EVENT", "ACK", "CONNECT_ERROR", "BINARY_EVENT", "BINARY_ACK"]);
    },
    set PacketTypes(value) {}
  });
  (function() {
  }).prototype = parser;
  is_binary.isView = function isView(obj) {
    return T.TypedData()[_is](obj);
  };
  dart.lazyFn(is_binary.isView, () => T.ObjectTobool());
  is_binary.isBinary = function isBinary(obj) {
    return obj != null && T.ByteBuffer()[_is](obj) || is_binary.isView(dart_rti._asObject(obj));
  };
  dart.lazyFn(is_binary.isBinary, () => T.dynamicTobool());
  is_binary.hasBinary = function hasBinary(obj, toJSON = false) {
    if (obj == null) {
      return false;
    }
    if (T.List()[_is](obj) && !T.TypedData()[_is](obj)) {
      for (let value of obj) {
        if (is_binary.hasBinary(value)) {
          return true;
        }
      }
    }
    if (is_binary.isBinary(obj)) {
      return true;
    }
    let toJsonMethod = null;
    if (toJSON === false && (toJsonMethod = is_binary._getToJsonMethod(obj)) != null) {
      return is_binary.hasBinary(dart.dcall(toJsonMethod, []), true);
    }
    if (T.Map()[_is](obj)) {
      if (obj[$_get]("toJSON") != null && T.Function()[_is](obj[$_get]("toJSON")) && toJSON === false) {
        return is_binary.hasBinary(dart.dcall(obj[$_get]("toJSON"), []), true);
      } else if (obj[$_get]("toJson") != null && T.Function()[_is](obj[$_get]("toJson")) && toJSON === false) {
        return is_binary.hasBinary(dart.dcall(obj[$_get]("toJson"), []), true);
      }
      for (let entry of obj[$entries]) {
        if (is_binary.hasBinary(entry.value)) {
          return true;
        }
      }
    }
    return false;
  };
  dart.lazyFn(is_binary.hasBinary, () => T.dynamicAndboolTobool());
  is_binary._getToJsonMethod = function _getToJsonMethod(obj) {
    if (T.Map()[_is](obj) || T.List()[_is](obj) || typeof obj == 'string' || typeof obj == 'number' || typeof obj == 'boolean' || obj == null) {
      return null;
    }
    let toJsonMethod = null;
    try {
      let toJsonMethod$ = dart.dload(obj, 'toJSON');
      if (T.Function()[_is](toJsonMethod$)) {
        return toJsonMethod$;
      }
    } catch (t$36$35e) {
      let e = dart.getThrown(t$36$35e);
      if (T.Object()[_is](e)) {
      } else
        throw t$36$35e;
    }
    try {
      toJsonMethod = dart.dload(obj, 'toJson');
      if (T.Function()[_is](toJsonMethod)) {
        return toJsonMethod;
      }
    } catch (t$36$35e$) {
      let e$ = dart.getThrown(t$36$35e$);
      if (T.Object()[_is](e$)) {
      } else
        throw t$36$35e$;
    }
    return null;
  };
  dart.lazyFn(is_binary._getToJsonMethod, () => T.dynamicToFunctionN());
  (function() {
  }).prototype = is_binary;
  (function() {
  }).prototype = event_emitter;
  binary.Binary = class Binary extends core.Object {
    static deconstructPacket(packet) {
      let buffers = [];
      packet[$_set]("data", binary.Binary._deconstructPacket(packet[$_get]("data"), buffers));
      packet[$_set]("attachments", buffers[$length]);
      return new _js_helper.LinkedMap.from(T.LinkedMap(), ["packet", packet, "buffers", buffers]);
    }
    static _deconstructPacket(data, buffers) {
      if (data == null) return null;
      if (T.Uint8List()[_is](data) || T.ByteBuffer()[_is](data)) {
        let placeholder = new _js_helper.IdentityMap.from(T.IdentityMapOfString$Object(), [binary.Binary.KEY_PLACEHOLDER, true, binary.Binary.KEY_NUM, buffers[$length]]);
        buffers[$add](data);
        return placeholder;
      } else if (T.List()[_is](data)) {
        let newData = [];
        let _data = data;
        let len = _data[$length];
        for (let i = 0; i < len; i = i + 1) {
          newData[$add](binary.Binary._deconstructPacket(_data[$_get](i), buffers));
        }
        return newData;
      } else if (T.Map()[_is](data)) {
        let newData$ = new _js_helper.LinkedMap.new(T.LinkedMap());
        let _data$ = data;
        data[$forEach](dart.fn((k, v) => {
          newData$[$_set](k, binary.Binary._deconstructPacket(_data$[$_get](k), buffers));
        }, T.dynamicAnddynamicTovoid$1()));
        return newData$;
      }
      return data;
    }
    static reconstructPacket(packet, buffers) {
      packet[$_set]("data", binary.Binary._reconstructPacket(packet[$_get]("data"), buffers));
      packet[$_set]("attachments", -1);
      return packet;
    }
    static _reconstructPacket(data, buffers) {
      if (data == null) return data;
      if (T.Map()[_is](data) && dart.equals(data[$_get](binary.Binary.KEY_PLACEHOLDER), true)) {
        let isIndexValid = T.int()[_is](data[$_get](binary.Binary.KEY_NUM)) && dart.dtest(dart.dsend(data[$_get](binary.Binary.KEY_NUM), '>=', [0])) && dart.dtest(dart.dsend(data[$_get](binary.Binary.KEY_NUM), '<', [buffers[$length]]));
        if (isIndexValid) {
          return buffers[$_get](dart_rti._asInt(data[$_get](binary.Binary.KEY_NUM)));
        } else {
          dart.throw(new core.FormatException.new("Illegal attachments"));
        }
      }
      if (T.List()[_is](data)) {
        let _data = data;
        let i = 0;
        _data[$forEach](dart.fn(v => {
          let t$363;
          _data[$_set]((t$363 = i, i = t$363 + 1, t$363), binary.Binary._reconstructPacket(v, buffers));
        }, T.dynamicTovoid()));
        return _data;
      } else if (T.Map()[_is](data)) {
        let _data$ = data;
        if (dart.str(_data$[$_get](binary.Binary.KEY_PLACEHOLDER))[$toLowerCase]() === "true") {
          let knum = dart.nullCheck(_data$[$_get](binary.Binary.KEY_NUM));
          let num = T.int()[_is](knum) ? knum : core.int.parse(dart_rti._asString(knum))[$toInt]();
          return num >= 0 && num < buffers[$length] ? buffers[$_get](num) : null;
        }
        data[$forEach](dart.fn((key, value) => {
          _data$[$_set](key, binary.Binary._reconstructPacket(value, buffers));
        }, T.dynamicAnddynamicTovoid$1()));
        return _data$;
      }
      return data;
    }
    static ['_#new#tearOff']() {
      return new binary.Binary.new();
    }
  };
  (binary.Binary.new = function() {
    ;
  }).prototype = binary.Binary.prototype;
  dart.lazyFn(binary.Binary.deconstructPacket, () => T.MapToMap());
  dart.lazyFn(binary.Binary._deconstructPacket, () => T.ObjectNAndListToObjectN());
  dart.lazyFn(binary.Binary.reconstructPacket, () => T.MapAndListToMap());
  dart.lazyFn(binary.Binary._reconstructPacket, () => T.ObjectNAndListToObjectN());
  dart.lazyFn(binary.Binary['_#new#tearOff'], () => T.VoidToBinary());
  dart.addRtiResources(binary.Binary, ["socket_io_common__src__parser__binary|Binary"]);
  dart.setMethodsImmediateTargetSignature(binary.Binary, () => dart.global.Object.setPrototypeOf({
    deconstructPacket: "package:socket_io_common/src/parser/binary.dart:Binary",
    _deconstructPacket: "package:socket_io_common/src/parser/binary.dart:Binary",
    reconstructPacket: "package:socket_io_common/src/parser/binary.dart:Binary",
    _reconstructPacket: "package:socket_io_common/src/parser/binary.dart:Binary"
  }, dart.getMethodsImmediateTargets(dart.global.Object.getPrototypeOf(binary.Binary))));
  dart.setStaticMethodSignature(binary.Binary, () => ['deconstructPacket', '_deconstructPacket', 'reconstructPacket', '_reconstructPacket']);
  dart.setLibraryUri(binary.Binary, I[4]);
  dart.setStaticFieldSignature(binary.Binary, () => ['KEY_PLACEHOLDER', 'KEY_NUM']);
  dart.defineLazy(binary.Binary, {
    /*binary.Binary.KEY_PLACEHOLDER*/get KEY_PLACEHOLDER() {
      return "_placeholder";
    },
    /*binary.Binary.KEY_NUM*/get KEY_NUM() {
      return "num";
    }
  });
  (function() {
  }).prototype = binary;
  parser$.PacketParser = class PacketParser extends core.Object {
    static encodePacket(packet, opts) {
      let supportsBinary = opts && 'supportsBinary' in opts ? opts.supportsBinary : null;
      let callback = opts && 'callback' in opts ? opts.callback : null;
      let fromClient = opts && 'fromClient' in opts ? opts.fromClient : false;
      return dart_rti._asStringQ(encodePacket.encodePacket(new encodePacket.Packet.new(dart_rti._asString(packet[$_get]("type")), packet[$_get]("data")), supportsBinary, callback));
    }
    static encodePayload(packets, opts) {
      let t$363;
      let callback = opts && 'callback' in opts ? opts.callback : null;
      let length = packets[$length];
      let encodedPackets = (t$363 = [], (() => {
        t$363[$length] = length;
        return t$363;
      })());
      let count = 0;
      let i = 0;
      packets[$forEach](dart.fn(packet => {
        encodePacket.encodePacket(new encodePacket.Packet.new(dart_rti._asString(dart.dsend(packet, '_get', ["type"])), dart.dsend(packet, '_get', ["data"])), false, dart.fn(encodedPacket => {
          let t$363;
          encodedPackets[$_set]((t$363 = i, i = t$363 + 1, t$363), encodedPacket);
          if ((count = count + 1) === length) {
            callback(encodedPackets[$join](parser$.SEPARATOR));
          }
        }, T.dynamicToNull()));
      }, T.dynamicTovoid()));
    }
    static map(ary, each, done) {
      let result = [];
      async.Future.wait(T.dynamic(), ary[$map](T.Future(), dart.fn(e => async.Future.microtask(T.Future(), dart.fn(() => each(e, dart.fn(msg => {
        result[$add](msg);
      }, T.dynamicToNull())), T.VoidTodynamic())), T.dynamicToFuture()))).then(T.dynamic(), dart.fn(r => done(result), T.ListTodynamic()));
    }
    static decodePayload(encodedPayload, binaryType) {
      let encodedPackets = dart.dsend(encodedPayload, 'split', [parser$.SEPARATOR]);
      let packets = [];
      for (let i = 0; i < dart_rti._asNum(dart.dload(encodedPackets, 'length')); i = i + 1) {
        let decodedPacket = decodePacket.decodePacket(dart.dsend(encodedPackets, '_get', [i]), binaryType);
        packets[$add](decodedPacket);
        if (dart.equals(dart.dsend(decodedPacket, '_get', ["type"]), "error")) {
          break;
        }
      }
      return packets;
    }
    static decodePacket(encodedPacket, binaryType) {
      return decodePacket.decodePacket(encodedPacket, binaryType);
    }
    static ['_#new#tearOff']() {
      return new parser$.PacketParser.new();
    }
  };
  (parser$.PacketParser.new = function() {
    ;
  }).prototype = parser$.PacketParser.prototype;
  dart.lazyFn(parser$.PacketParser.encodePacket, () => T.Map__ToStringN());
  dart.lazyFn(parser$.PacketParser.encodePayload, () => T.List__Todynamic());
  dart.lazyFn(parser$.PacketParser.map, () => T.ListAndFnAndFnTodynamic());
  dart.lazyFn(parser$.PacketParser.decodePayload, () => T.dynamicAnddynamicTodynamic());
  dart.lazyFn(parser$.PacketParser.decodePacket, () => T.dynamicAnddynamicTodynamic());
  dart.lazyFn(parser$.PacketParser['_#new#tearOff'], () => T.VoidToPacketParser());
  dart.addRtiResources(parser$.PacketParser, ["socket_io_common__src__engine__parser__parser|PacketParser"]);
  dart.setMethodsImmediateTargetSignature(parser$.PacketParser, () => dart.global.Object.setPrototypeOf({
    encodePacket: "package:socket_io_common/src/engine/parser/parser.dart:PacketParser",
    encodePayload: "package:socket_io_common/src/engine/parser/parser.dart:PacketParser",
    map: "package:socket_io_common/src/engine/parser/parser.dart:PacketParser",
    decodePayload: "package:socket_io_common/src/engine/parser/parser.dart:PacketParser",
    decodePacket: "package:socket_io_common/src/engine/parser/parser.dart:PacketParser"
  }, dart.getMethodsImmediateTargets(dart.global.Object.getPrototypeOf(parser$.PacketParser))));
  dart.setStaticMethodSignature(parser$.PacketParser, () => ['encodePacket', 'encodePayload', 'map', 'decodePayload', 'decodePacket']);
  dart.setLibraryUri(parser$.PacketParser, I[5]);
  dart.defineLazy(parser$, {
    /*parser$.protocol*/get protocol() {
      return 4;
    },
    /*parser$.SEPARATOR*/get SEPARATOR() {
      return core.String.fromCharCode(30);
    }
  });
  (function() {
  }).prototype = parser$;
  var type = dart.privateName(encodePacket, "Packet.type");
  var data = dart.privateName(encodePacket, "Packet.data");
  encodePacket.Packet = class Packet extends core.Object {
    get type() {
      return this[type];
    }
    set type(value) {
      this[type] = value;
    }
    get data() {
      return this[data];
    }
    set data(value) {
      this[data] = value;
    }
    static ['_#new#tearOff'](type, data) {
      return new encodePacket.Packet.new(type, data);
    }
  };
  (encodePacket.Packet.new = function(type$, data$) {
    this[type] = type$;
    this[data] = data$;
    ;
  }).prototype = encodePacket.Packet.prototype;
  dart.lazyFn(encodePacket.Packet['_#new#tearOff'], () => T.StringAnddynamicToPacket());
  dart.addRtiResources(encodePacket.Packet, ["socket_io_common__src__engine__parser__encodePacket|Packet"]);
  dart.setLibraryUri(encodePacket.Packet, I[6]);
  dart.setFieldSignature(encodePacket.Packet, () => dart.global.Object.setPrototypeOf({
    type: {
      type: _ti => T.String(),
      isConst: false,
      isFinal: false,
      libraryUri: I[3]
    },
    data: {
      type: _ti => T.dynamic(),
      isConst: false,
      isFinal: false
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(encodePacket.Packet))));
  encodePacket.TextEncoder = class TextEncoder extends core.Object {
    encode(input) {
      return _native_typed_data.NativeUint8List.fromList(T.NativeUint8List(), convert.utf8.encode(input));
    }
    static ['_#new#tearOff']() {
      return new encodePacket.TextEncoder.new();
    }
  };
  (encodePacket.TextEncoder.new = function() {
    ;
  }).prototype = encodePacket.TextEncoder.prototype;
  dart.lazyFn(encodePacket.TextEncoder['_#new#tearOff'], () => T.VoidToTextEncoder());
  dart.addRtiResources(encodePacket.TextEncoder, ["socket_io_common__src__engine__parser__encodePacket|TextEncoder"]);
  dart.setMethodSignature(encodePacket.TextEncoder, () => dart.global.Object.setPrototypeOf({
    encode: _ti => T.StringToUint8List()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(encodePacket.TextEncoder))));
  dart.setMethodsImmediateTargetSignature(encodePacket.TextEncoder, () => dart.global.Object.setPrototypeOf({encode: "package:socket_io_common/src/engine/parser/encodePacket.dart:TextEncoder"}, dart.getMethodsImmediateTargets(dart.global.Object.getPrototypeOf(encodePacket.TextEncoder))));
  dart.setLibraryUri(encodePacket.TextEncoder, I[6]);
  encodePacket.encodePacket = function encodePacket$(packet, supportsBinary, callback) {
    let t$363;
    if (T.ByteBuffer()[_is](packet.data) || T.Uint8List()[_is](packet.data)) {
      return callback(supportsBinary ? packet.data : "b" + convert.base64Encode(encodePacket.toBuffer(packet.data, true)));
    } else {
      return callback(dart.str(commons.PacketTypeMap[$_get](packet.type)) + dart_rti._asString((t$363 = packet.data, t$363 == null ? "" : t$363)));
    }
  };
  dart.lazyFn(encodePacket.encodePacket, () => T.PacketAndboolAndFnTodynamic());
  encodePacket.toBuffer = function toBuffer(data, forceBufferConversion) {
    if (T.Uint8List()[_is](data) && !forceBufferConversion) {
      return data;
    } else if (T.ByteBuffer()[_is](data)) {
      return data[$asUint8List]();
    } else {
      return typed_data.Uint8List.view(T.ByteBuffer()[_as](dart.dload(data, 'buffer')), dart_rti._asInt(dart.dload(data, 'offsetInBytes')), dart_rti._asIntQ(dart.dload(data, 'lengthInBytes')));
    }
  };
  dart.lazyFn(encodePacket.toBuffer, () => T.dynamicAndboolToUint8List());
  encodePacket.encodePacketToBinary = function encodePacketToBinary(packet, callback) {
    if (T.ByteBuffer()[_is](packet.data) || T.Uint8List()[_is](packet.data)) {
      callback(encodePacket.toBuffer(packet.data, false));
    } else {
      encodePacket.encodePacket(packet, true, dart.fn(encoded => {
        callback(encodePacket._textEncoder.encode(dart_rti._asString(encoded)));
      }, T.dynamicToNull()));
    }
  };
  dart.lazyFn(encodePacket.encodePacketToBinary, () => T.PacketAndFnTovoid());
  dart.defineLazy(encodePacket, {
    /*encodePacket._textEncoder*/get _textEncoder() {
      return new encodePacket.TextEncoder.new();
    }
  });
  (function() {
  }).prototype = encodePacket;
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  commons.PacketType = class PacketType extends core._Enum {
    [_enumToString]() {
      return "PacketType." + this[_name];
    }
  };
  (commons.PacketType.new = function(t$36$35index, t$36$35name) {
    dart.global.Object.getPrototypeOf(commons.PacketType).new.call(this, t$36$35index, t$36$35name);
    ;
  }).prototype = commons.PacketType.prototype;
  dart.addRtiResources(commons.PacketType, ["socket_io_common__src__engine__parser__commons|PacketType"]);
  dart.setMethodSignature(commons.PacketType, () => dart.global.Object.setPrototypeOf({
    [_enumToString]: _ti => T.VoidToString()
  }, dart.getMethods(dart.global.Object.getPrototypeOf(commons.PacketType))));
  dart.setMethodsImmediateTargetSignature(commons.PacketType, () => dart.global.Object.setPrototypeOf({[_enumToString]: "package:socket_io_common/src/engine/parser/commons.dart:PacketType"}, dart.getMethodsImmediateTargets(dart.global.Object.getPrototypeOf(commons.PacketType))));
  dart.setLibraryUri(commons.PacketType, I[7]);
  dart.setStaticFieldSignature(commons.PacketType, () => ['OPEN', 'CLOSE', 'PING', 'PONG', 'MESSAGE', 'UPGRADE', 'NOOP', 'values']);
  dart.defineLazy(commons.PacketType, {
    /*commons.PacketType.OPEN*/get OPEN() {
      return C[1] || CT.C1;
    },
    /*commons.PacketType.CLOSE*/get CLOSE() {
      return C[2] || CT.C2;
    },
    /*commons.PacketType.PING*/get PING() {
      return C[3] || CT.C3;
    },
    /*commons.PacketType.PONG*/get PONG() {
      return C[4] || CT.C4;
    },
    /*commons.PacketType.MESSAGE*/get MESSAGE() {
      return C[5] || CT.C5;
    },
    /*commons.PacketType.UPGRADE*/get UPGRADE() {
      return C[6] || CT.C6;
    },
    /*commons.PacketType.NOOP*/get NOOP() {
      return C[7] || CT.C7;
    },
    /*commons.PacketType.values*/get values() {
      return C[8] || CT.C8;
    }
  });
  dart.defineLazy(commons, {
    /*commons.PacketTypeList*/get PacketTypeList() {
      return C[9] || CT.C9;
    },
    /*commons.PacketTypeMap*/get PacketTypeMap() {
      return C[10] || CT.C10;
    },
    /*commons.PACKET_TYPES_REVERSE*/get PACKET_TYPES_REVERSE() {
      return (() => {
        let t$365 = new _js_helper.IdentityMap.new(T.IdentityMapOfString$String());
        for (let entry of commons.PacketTypeMap[$entries])
          t$365[$_set](dart.strSafe(entry.value), entry.key);
        return t$365;
      })();
    },
    set PACKET_TYPES_REVERSE(value) {},
    /*commons.ERROR_PACKET*/get ERROR_PACKET() {
      return C[11] || CT.C11;
    }
  });
  (function() {
  }).prototype = commons;
  decodePacket.mapBinary = function mapBinary(data, binaryType) {
    let isBuffer = T.ByteBuffer()[_is](data);
    if (dart.equals(binaryType, "arraybuffer")) {
      return isBuffer ? data[$asUint8List]() : data;
    }
    return data;
  };
  dart.lazyFn(decodePacket.mapBinary, () => T.dynamicAnddynamicTodynamic());
  decodePacket.decodePacket = function decodePacket$(encodedPacket, binaryType) {
    if (unknown_js_type.isJSString(dart_rti._asObject(encodedPacket))) {
      encodedPacket = dart.str(encodedPacket);
    }
    if (!(typeof encodedPacket == 'string')) {
      return new _js_helper.IdentityMap.from(T.IdentityMapOfString$dynamic(), ["type", "message", "data", decodePacket.mapBinary(encodedPacket, binaryType)]);
    }
    let type = encodedPacket[$_get](0);
    if (type === "b") {
      let buffer = convert.base64.decode(convert.utf8.decode(encodedPacket[$substring](1)[$codeUnits]));
      return new _js_helper.IdentityMap.from(T.IdentityMapOfString$dynamic(), ["type", "message", "data", decodePacket.mapBinary(buffer, binaryType)]);
    }
    if (!commons.PACKET_TYPES_REVERSE[$containsKey](type)) {
      return commons.ERROR_PACKET;
    }
    if (encodedPacket.length > 1) {
      return new _js_helper.IdentityMap.from(T.IdentityMapOfString$StringN(), ["type", commons.PACKET_TYPES_REVERSE[$_get](type), "data", encodedPacket[$substring](1)]);
    } else {
      return new _js_helper.IdentityMap.from(T.IdentityMapOfString$StringN(), ["type", commons.PACKET_TYPES_REVERSE[$_get](type)]);
    }
  };
  dart.lazyFn(decodePacket.decodePacket, () => T.dynamicAnddynamicTodynamic());
  (function() {
  }).prototype = decodePacket;
  unknown_js_type.isJSString = function isJSString(obj) {
    return js_interop_type_adapter.isString(obj);
  };
  dart.lazyFn(unknown_js_type.isJSString, () => T.ObjectTobool());
  (function() {
  }).prototype = unknown_js_type;
  js_interop_type_adapter.isString = function isString(obj) {
    return typeof obj == 'string';
  };
  dart.lazyFn(js_interop_type_adapter.isString, () => T.ObjectTobool());
  (function() {
  }).prototype = js_interop_type_adapter;
  dart.moduleConstCaches.set("packages/socket_io_common/socket_io_common", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"_interceptors|JSArray":{"JSArray.E":"1","_interceptors|JavaScriptObject":[],"List.E":"1","core|List":["1"],"JSIndexable.E":"1","_interceptors|JSIndexable":["1"],"_js_helper|TrustedGetRuntimeType":[],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_interceptors|JavaScriptObject":{"_interceptors|Interceptor":[],"_interceptors|JSObject":[]},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_interceptors|JSIndexable":{"JSIndexable.E":"1"},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"core|Comparable":{"Comparable.T":"1"},"core|Map":{"Map.K":"1","Map.V":"2"},"_js_helper|IdentityMap":{"IdentityMap.K":"1","IdentityMap.V":"2","InternalMap.K":"1","InternalMap.V":"2","_js_helper|InternalMap":["1","2"],"MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"_js_helper|InternalMap":{"InternalMap.K":"1","InternalMap.V":"2","MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|MapBase":{"MapBase.K":"1","MapBase.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|LinkedHashMap":{"LinkedHashMap.K":"1","LinkedHashMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|HashMap":{"HashMap.K":"1","HashMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"socket_io_common__src__parser__parser|Decoder":{"socket_io_common__src__util__event_emitter|EventEmitter":[]},"_js_helper|LinkedMap":{"LinkedMap.K":"1","LinkedMap.V":"2","InternalMap.K":"1","InternalMap.V":"2","_js_helper|InternalMap":["1","2"],"MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"typed_data|Uint8List":{"typed_data|_TypedIntList":[],"TypedDataList.E":"core|int","typed_data|TypedDataList":["core|int"],"typed_data|TypedData":[],"List.E":"core|int","core|List":["core|int"],"Iterable.E":"core|int","core|Iterable":["core|int"],"_ListIterable.E":"core|int","core|_ListIterable":["core|int"],"EfficientLengthIterable.T":"core|int","_internal|EfficientLengthIterable":["core|int"],"HideEfficientLengthIterable.T":"core|int","_internal|HideEfficientLengthIterable":["core|int"]},"typed_data|_TypedIntList":{"TypedDataList.E":"core|int","typed_data|TypedDataList":["core|int"],"typed_data|TypedData":[],"List.E":"core|int","core|List":["core|int"],"Iterable.E":"core|int","core|Iterable":["core|int"],"_ListIterable.E":"core|int","core|_ListIterable":["core|int"],"EfficientLengthIterable.T":"core|int","_internal|EfficientLengthIterable":["core|int"],"HideEfficientLengthIterable.T":"core|int","_internal|HideEfficientLengthIterable":["core|int"]},"typed_data|TypedDataList":{"TypedDataList.E":"1","typed_data|TypedData":[],"List.E":"1","core|List":["1"],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"async|Future":{"Future.T":"1"},"_native_typed_data|NativeUint8List":{"_native_typed_data|NativeTypedArrayOfInt":[],"typed_data|Uint8List":[],"List.E":"core|int","core|List":["core|int"],"typed_data|_TypedIntList":[],"FixedLengthListMixin.E":"core|int","_internal|FixedLengthListMixin":["core|int"],"Iterable.E":"core|int","core|Iterable":["core|int"],"_ListIterable.E":"core|int","core|_ListIterable":["core|int"],"TypedDataList.E":"core|int","typed_data|TypedDataList":["core|int"],"NativeTypedArray.E":"core|int","_native_typed_data|NativeTypedArray":["core|int"],"ListBase.E":"core|int","collection|ListBase":["core|int"],"EfficientLengthIterable.T":"core|int","_internal|EfficientLengthIterable":["core|int"],"HideEfficientLengthIterable.T":"core|int","_internal|HideEfficientLengthIterable":["core|int"],"typed_data|TypedData":[],"_native_typed_data|NativeTypedData":[],"JavaScriptIndexingBehavior.E":"core|int","_js_helper|JavaScriptIndexingBehavior":["core|int"],"_interceptors|JavaScriptObject":[],"JSMutableIndexable.E":"core|int","_interceptors|JSMutableIndexable":["core|int"],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"JSIndexable.E":"core|int","_interceptors|JSIndexable":["core|int"]},"_native_typed_data|NativeTypedArrayOfInt":{"List.E":"core|int","core|List":["core|int"],"FixedLengthListMixin.E":"core|int","_internal|FixedLengthListMixin":["core|int"],"Iterable.E":"core|int","core|Iterable":["core|int"],"_ListIterable.E":"core|int","core|_ListIterable":["core|int"],"NativeTypedArray.E":"core|int","_native_typed_data|NativeTypedArray":["core|int"],"ListBase.E":"core|int","collection|ListBase":["core|int"],"EfficientLengthIterable.T":"core|int","_internal|EfficientLengthIterable":["core|int"],"HideEfficientLengthIterable.T":"core|int","_internal|HideEfficientLengthIterable":["core|int"],"_native_typed_data|NativeTypedData":[],"JavaScriptIndexingBehavior.E":"core|int","_js_helper|JavaScriptIndexingBehavior":["core|int"],"_interceptors|JavaScriptObject":[],"typed_data|TypedData":[],"JSMutableIndexable.E":"core|int","_interceptors|JSMutableIndexable":["core|int"],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"JSIndexable.E":"core|int","_interceptors|JSIndexable":["core|int"]},"_internal|FixedLengthListMixin":{"FixedLengthListMixin.E":"1"},"_native_typed_data|NativeTypedArray":{"NativeTypedArray.E":"1","_native_typed_data|NativeTypedData":[],"JavaScriptIndexingBehavior.E":"1","_js_helper|JavaScriptIndexingBehavior":["1"],"_interceptors|JavaScriptObject":[],"typed_data|TypedData":[],"JSMutableIndexable.E":"1","_interceptors|JSMutableIndexable":["1"],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"JSIndexable.E":"1","_interceptors|JSIndexable":["1"]},"collection|ListBase":{"ListBase.E":"1","List.E":"1","core|List":["1"],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_native_typed_data|NativeTypedData":{"_interceptors|JavaScriptObject":[],"typed_data|TypedData":[],"_interceptors|Interceptor":[],"_interceptors|JSObject":[]},"_js_helper|JavaScriptIndexingBehavior":{"JavaScriptIndexingBehavior.E":"1","JSMutableIndexable.E":"1","_interceptors|JSMutableIndexable":["1"],"JSIndexable.E":"1","_interceptors|JSIndexable":["1"]},"_interceptors|JSMutableIndexable":{"JSMutableIndexable.E":"1","JSIndexable.E":"1","_interceptors|JSIndexable":["1"]},"socket_io_common__src__engine__parser__commons|PacketType":{"core|_Enum":[],"core|Enum":[]},"core|_Enum":{"core|Enum":[]}}'));
  dart.trackLibraries("packages/socket_io_common/socket_io_common", {
    "package:socket_io_common/socket_io_common.dart": socket_io_common,
    "package:socket_io_common/src/parser/parser.dart": parser,
    "package:socket_io_common/src/parser/is_binary.dart": is_binary,
    "package:socket_io_common/src/util/event_emitter.dart": event_emitter,
    "package:socket_io_common/src/parser/binary.dart": binary,
    "package:socket_io_common/src/engine/parser/parser.dart": parser$,
    "package:socket_io_common/src/engine/parser/encodePacket.dart": encodePacket,
    "package:socket_io_common/src/engine/parser/commons.dart": commons,
    "package:socket_io_common/src/engine/parser/decodePacket.dart": decodePacket,
    "package:socket_io_common/src/util/unknown_js_type.dart": unknown_js_type,
    "package:socket_io_common/src/util/js_interop_type_adapter.dart": js_interop_type_adapter
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["src/parser/parser.dart","src/util/event_emitter.dart","src/parser/is_binary.dart","src/parser/binary.dart","src/engine/parser/parser.dart","src/engine/parser/encodePacket.dart","src/engine/parser/commons.dart","src/engine/parser/decodePacket.dart","src/util/unknown_js_type.dart","src/util/js_interop_type_adapter.dart"],"names":[],"mappings":"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","file":"socket_io_common.ddc.js"}');
  // Exports:
  return {
    socket_io_common__socket_io_common: socket_io_common,
    socket_io_common__src__parser__parser: parser,
    socket_io_common__src__parser__is_binary: is_binary,
    socket_io_common__src__util__event_emitter: event_emitter,
    socket_io_common__src__parser__binary: binary,
    socket_io_common__src__engine__parser__parser: parser$,
    socket_io_common__src__engine__parser__encodePacket: encodePacket,
    socket_io_common__src__engine__parser__commons: commons,
    socket_io_common__src__engine__parser__decodePacket: decodePacket,
    socket_io_common__src__util__unknown_js_type: unknown_js_type,
    socket_io_common__src__util__js_interop_type_adapter: js_interop_type_adapter
  };
}));

//# sourceMappingURL=socket_io_common.ddc.js.map
